<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Bosch Documentation Site</title><link>https://squoc.github.io/getting-started/</link><description>Recent content in Getting Started on Bosch Documentation Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Jan 2023 10:43:22 +0700</lastBuildDate><atom:link href="https://squoc.github.io/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>What Is Gitops?</title><link>https://squoc.github.io/getting-started/what-is-gitops/</link><pubDate>Thu, 05 Jan 2023 10:46:51 +0700</pubDate><guid>https://squoc.github.io/getting-started/what-is-gitops/</guid><description>What is GitOps? GitOps is a set of best practices for declaratively observing and describing a system’s operating infrastructure. You can apply the GitOps methodology throughout the application development workflow, using Git as a single source of truth to actively reconcile and declaratively configure an application.
In a GitOps model, the system’s desired configuration is stored in a revision con- trol system, such as Git. Instead of making changes directly to the system via a UI or CLI, an engineer makes changes to the configuration files that represent the desired state.</description></item><item><title>Benefits of Gitops</title><link>https://squoc.github.io/getting-started/benefits-of-gitops/</link><pubDate>Wed, 11 Jan 2023 09:35:32 +0700</pubDate><guid>https://squoc.github.io/getting-started/benefits-of-gitops/</guid><description>Benefits of GitOps Combining a GitOps methodology with Kubernetes’ declarative configuration and active reconciliation model provides many operational benefits that provide a more predictable and reliable system.
Declarative In an imperative model, we specify a series of steps to instruct the system how to reach our desired state. In contrast, with declarative models, we describe what we want to achieve as opposed to how to get there.
GitOps model solely uses declarative manifests stored in Git repo that declare the desired state and let a gitops tool to detect and converge with kubernetes cluster.</description></item></channel></rss>